// yarn deploy --tags VoteUltraVerifier

import { HardhatRuntimeEnvironment } from "hardhat/types";
import { DeployFunction } from "hardhat-deploy/types";
import { Contract } from "ethers";

/**
 * Deploys a contract named "YourContract" using the deployer account and
 * constructor arguments set to the deployer address
 *
 * @param hre HardhatRuntimeEnvironment object.
 */
const deployYourContract: DeployFunction = async function (hre: HardhatRuntimeEnvironment) {
  /*
    On localhost, the deployer account is the one that comes with Hardhat, which is already funded.

    When deploying to live networks (e.g `yarn deploy --network sepolia`), the deployer account
    should have sufficient balance to pay for the gas fees for contract creation.

    You can generate a random account with `yarn generate` or `yarn account:import` to import your
    existing PK which will fill DEPLOYER_PRIVATE_KEY_ENCRYPTED in the .env file (then used on hardhat.config.ts)
    You can run the `yarn account` command to check your balance in every network.
  */
  const { deployer } = await hre.getNamedAccounts();
  const { deploy } = hre.deployments;

  await deploy("VoteUltraVerifier", {
    from: deployer,
    // Contract constructor arguments
    args: [],
    log: true,
    // autoMine: can be passed to the deploy function to make the deployment process faster on local networks by
    // automatically mining the contract deployment transaction. There is no effect on live networks.
    autoMine: true,
  });

  // Get the deployed contract to interact with it after deploying.
  const yourContract = await hre.ethers.getContract<Contract>("VoteUltraVerifier", deployer);
  const hex_proof =
    "0x107caedbbd4a4ef393c4a931176f6eeb6ebceff1b16eed2a83573437cfe9ea7d066af495adbc0feb87fa502476d3d4fe16d1e9bc448b20a7299e61357c3ff0ad02806bafb13d60c5de73e5a60297e3ed33d78926bbccbfd16e1e8ea470645fb42d11ce692c7a6114c9b16eae9db980e21d4b290e83b4ec0a41d04077f84aaa7909c22a7853f54910eaf162eb101d5fd98594a3127efd7bc2af26eb8da7942de31c04a3704234559e3b21a7923da114a8d72aa0198784ad2cb483ca0aaf238fd723c4408d42f980ebbefebd5fbb0e4a58592da6f1c6626426856b8cc453f5391f249327797f35bcae7f30a2cbcd7931ed439d70b53a17b0880f103f77f5845cd620e21c9d2119f1af0b0d4ab1c49d5779fd68fb4078eff86baf89581511df5f701a225056fc20d24a17fa4ae7378995e743d36033b6665f6fec3bf4fedd96221d1e56c86ea2569e8ce74c072cf2602e28cd9eb840569efdd67308d5dd9266eec81ef6ff6e313372808a88176a548278c03dc86afefdd4d347a1b2661cfaf694a7123225dc0a384116448041d41b71f8e3b53237d9ac7aa776452a05434012ab5e0117c4e8282864ebad8e293c8624e602ac4d7fccb34e458c318730a143db15ff2e1dc8b5e85a8366b45e59cf878a467fc9b13540364b4c6af7e83bdb48f5f8ef106c13285aa41d99913bcd6f655a1d0ac8a05ef72c9f2d1522a48198c56e112422939e05406a78a36ff4330a1b76a8408217c20a7a6553981fb1c264714d4020206dc889da98153b1dce46eef07fb0a8c863b3666c9449b01e18ecf96ca98cbb0a9d563d6601ca4e5b9b217916f7032472022abdca52f9c63a4ae6f13cd9f17c0dcd3492e2c33134a21654b0b4ab79303a7e2737b3f66cf87cc583b243e5dea82d519b5efdb109d48f067a631f06a438e7f8527de9327f820c2ca54b5c865b4a1daffcc5590b8428bc8f030262fe2f622854324b998b153c614d9112665138020ee322b4aeaf8c3838808dd359d63731c620baa497402a68a2ca074c535795c324dd520466ff9e4fc0fd83ee272527badb684922d169959ac77158e871b4a8f0093707b21439394cbe12bc1d2d00833a2ccede55bbd0043b795435471cc062a71ea532ab5dca0bd310d31d2331f9bd146bf8d065a25db8a5422ed2ed15e50079207b1fe7117914c60695a54545b021f708e58b4edf4cf1beda1b4a4949a2cd071542436a633b1aa7f8d049fab91380ac2b18347469e9a5ccb2637acd975fda5117ae565b22c3a69444c9d892bbe15e6844dd41872f578269a4f41e83a49e8dc710002f60119abf9992935638e601d16a8b71937a7758166768e1b5fbd7f19c3e08f5b1d646b89011f5ae8ec5b32cc5150d96a2be287399f5be393145841061e9291f48e5f5f109773d556decf717d0edfb45ff5d827e15df5a55b9a8951f01de2a5505a98476e17ddb3d72382b278d7b07fc4472427c48e81511ad85dde4f5512525b8534394c287ad06f374e7c8250e9aa36f92bb46de76146d1efc31bdfc6b198fc111ccf71b11ebf445f1675983b09fc48db0179c611949e2dfd91059a14f06edb7453bfee734b7df9f8ec70034fd7dfef5fe4a705adf2174266d19049a9f0a40675cba868a86a2f616dd367fb904fe0e28c84110dc434a118dfde414a89f1334615ed753828348cfcd855df41858b19f787cbe93d707b05440afdcc6e5ac0b725b6af30522bb44d487549a3f6f8221bea2e11fb0bc6b6795e2d70fa7963d1fc552c603b5cf233c19850952757e8ea8cf7b9a33b6d287be7b6c944b643f412f9e30eacf4c951155c5cea30984e1cd98988d80678cbb1453cf27630080dc100b782c5deb667b3fb975ed60c142dd4072fdda6ebf33c1b1658dceef7f040fcd284b680baf5d2dae2e4c47f6c3b54c18cb91ad4f02fd797e4548538ce17222ed03b055770eb6c2f340d94123d68ac6ab91ddcd4580cda1cf1ed784fe428846ce2c529df60b9a0354f52e40a9945776322a30dff25ba3f7c419fb1cb96568f76024909802274ba38cf132fa78d0a2cd5b9a500a56bcc0dd27d13cbee09849a7f11cce920e42fd43c4ed37b4480cee24850a6f34bb1dddc28b887e6107cb2a58822a7a733a843ea1db54c1a017a91212dc6141f94f9b3d26dc8a8f5a3a4424d3f90550206f91278f2cdfb29771e074335c66d78b1e9fca7dfba6eab677ca9f196f1308d8a0756f811a7394f956b0777c0b059f86464bd07a9fd8ddff576772b61e24ad2cac9480508f40c06b8d6685c3396397c7817cd125cdb0e3fb74ff0d18812fffd11ded4c5c2101c82da46c17006add938fcce1c016e5acc2d6575d2313751549721ab75b6c72b4d2dd452f077f9c92933c497a8c88edce180fe8c6dc414c01e9f71beb5475f0e4dd3a6a55e13ade3bc2e2c87e91bf147f430654e0c8a9521155a648dc6b039a6460553ff78d6e78169acc0f9e8f8df6de6b4c0e65e592d82188c05f767e5f2d69a0f91db74eaa6adf726082ea031fe6074b5fd87e7fb2e6034db73b1f73fd512aea4d3ee9faf959036fd9c7352401c0627e3ddc8269cd900ed9acfdb6d64dfd40465b885d9b717032b3b8f4a1773c72d75f5676667e489b010940f5607bde61d5219b6608d148a85a66d40e97f157fd583b8f0266e0c2901b274f1c81cf92642cb4d2307cb3944018d88d39d49b95f12f71302433ffb8181d6a95b4374b8941db193909dc6d35f01aea98fea65337c548ba9ed1e2ffb21a1faddc4becc7801f897d9fe33c26d7a01cfca4c3780ad99962040d7f91ffac1c21f122e3a24376fd37e206bc9be079501f0eb08849c27b6d7b4d7c2d40ffa61e287cdf863cefdf4c1d52ea3e750c27a0b4b590591ec94792ec4941e75ee24435231dd0e31abd04f7c7b9e0ac922274fe4c750f1b30063e21946307eedae3b896244369738dc6215360866cfbe6834f226310374d829d34ea725da08926685759071532cd3766cc3b56ad78ba58b09ffbb57fa8f203ea8e7e25a0346f67667d55";
  const public_inputs = [
    "0x000000000000000000000000000000000000000000000000000000000000052b",
    "0x22a03584a33f4906bacbe68ca86905f0f6e16b81114bbbe0315c7d359544a45c",
    "0x0000000000000000000000000000000000000000000000000000000000000000",
    "0x199b8856d2a2f31f2ad1ebd3eefb00a8222a3d941624e15174bc5225eb052248",
  ];
  console.log("ðŸ‘‹ Initial greeting:", await yourContract.verify(hex_proof, public_inputs));
};

export default deployYourContract;

// Tags are useful if you have multiple deploy files and only want to run one of them.
// e.g. yarn deploy --tags YourContract
deployYourContract.tags = ["VoteUltraVerifier"];
